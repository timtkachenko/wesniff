// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AdditionalVerifiedData additional verified data
//
// swagger:model AdditionalVerifiedData
type AdditionalVerifiedData struct {

	// drivers license category
	DriversLicenseCategory *AdditionalVerifiedDataDriversLicenseCategory `json:"driversLicenseCategory,omitempty"`
}

// Validate validates this additional verified data
func (m *AdditionalVerifiedData) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDriversLicenseCategory(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AdditionalVerifiedData) validateDriversLicenseCategory(formats strfmt.Registry) error {

	if swag.IsZero(m.DriversLicenseCategory) { // not required
		return nil
	}

	if m.DriversLicenseCategory != nil {
		if err := m.DriversLicenseCategory.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("driversLicenseCategory")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AdditionalVerifiedData) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AdditionalVerifiedData) UnmarshalBinary(b []byte) error {
	var res AdditionalVerifiedData
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// AdditionalVerifiedDataDriversLicenseCategory additional verified data drivers license category
//
// swagger:model AdditionalVerifiedDataDriversLicenseCategory
type AdditionalVerifiedDataDriversLicenseCategory struct {

	// b
	B bool `json:"B,omitempty"`
}

// Validate validates this additional verified data drivers license category
func (m *AdditionalVerifiedDataDriversLicenseCategory) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AdditionalVerifiedDataDriversLicenseCategory) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AdditionalVerifiedDataDriversLicenseCategory) UnmarshalBinary(b []byte) error {
	var res AdditionalVerifiedDataDriversLicenseCategory
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
